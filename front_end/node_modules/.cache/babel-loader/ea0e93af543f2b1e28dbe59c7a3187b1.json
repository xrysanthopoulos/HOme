{"ast":null,"code":"import _classCallCheck from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/dimitris/Documents/HOme/front_end/src/Components/Add.js\";\nimport React from 'react';\nimport Modal from './Modal';\nimport '../css/edit.scss';\n\nvar Add =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Add, _React$Component);\n\n  function Add(props) {\n    var _this;\n\n    _classCallCheck(this, Add);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Add).call(this, props));\n\n    _this.showModal = function () {\n      _this.setState({\n        show: true\n      });\n    };\n\n    _this.hideModal = function () {\n      _this.setState({\n        show: false\n      });\n    };\n\n    _this.handleChangeName = function (event) {\n      _this.setState({\n        s_name: event.target.value\n      });\n    };\n\n    _this.handleChangeId = function (event) {\n      var id = parseInt(event.target.value);\n\n      _this.setState({\n        s_id: id\n      });\n    };\n\n    _this.triggerMessage = function () {\n      _this.setState({\n        show: true\n      });\n\n      setTimeout(function () {\n        _this.setState({\n          show: false\n        });\n      }, 2500);\n    };\n\n    _this.state = {\n      s_name: '',\n      s_id: '',\n      show: false\n    }; // this.handleChange = this.handleChange.bind(this);\n\n    _this.handleChangeName = _this.handleChangeName.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleChangeId = _this.handleChangeId.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.triggerMessage = _this.triggerMessage.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Add, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var postData = function postData() {\n        if (_this2.state.s_name !== '' && _this2.state.s_id !== '') {\n          fetch('http://127.0.0.1:5000/add_place', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              place: _this2.state.s_name,\n              switch: _this2.state.s_id\n            })\n          }).then(function (res) {\n            return res.json();\n          }).then(function (data) {\n            return console.log(data);\n          }).catch(function (err) {\n            return console.log(err);\n          });\n          {\n            _this2.showModal();\n          }\n          {\n            _this2.triggerMessage();\n          }\n        } else {\n          alert(\"Error\");\n        }\n      };\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title-modal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Add new switch.\"), React.createElement(\"div\", {\n        className: \"inputs\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Modal, {\n        show: this.state.show,\n        handleClose: this.hideModal,\n        button: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"added-msg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"\\u2705 Successful applied the new place. \\uD83D\\uDE09\")), React.createElement(\"h3\", {\n        className: \"title-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Place Name\"), React.createElement(\"input\", {\n        className: \"input add-input\",\n        type: \"text\",\n        name: \"name\",\n        value: null,\n        onChange: this.handleChangeName,\n        placeholder: \"Switch Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"title-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"input\", {\n        className: \"input remove-input\",\n        type: \"number\",\n        name: \"id\",\n        value: null,\n        onChange: this.handleChangeId,\n        placeholder: \"Switch ID\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"add-btn\",\n        onClick: postData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Add\"));\n    }\n  }]);\n\n  return Add;\n}(React.Component);\n\nexport default Add;","map":{"version":3,"sources":["/Users/dimitris/Documents/HOme/front_end/src/Components/Add.js"],"names":["React","Modal","Add","props","showModal","setState","show","hideModal","handleChangeName","event","s_name","target","value","handleChangeId","id","parseInt","s_id","triggerMessage","setTimeout","state","bind","postData","fetch","method","headers","body","JSON","stringify","place","switch","then","res","json","data","console","log","catch","err","alert","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from './Modal';\nimport '../css/edit.scss';\n\nclass Add extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state= {\n            s_name: '',\n            s_id: '',\n            show: false\n        };\n        // this.handleChange = this.handleChange.bind(this);\n        this.handleChangeName = this.handleChangeName.bind(this);\n        this.handleChangeId = this.handleChangeId.bind(this);\n        this.triggerMessage = this.triggerMessage.bind(this);\n    }\n\n    showModal = () => {\n        this.setState({ show: true });\n    };\n\n    hideModal = () => {\n        this.setState({ show: false });\n    };\n\n    handleChangeName = (event) => {\n        this.setState({ s_name: event.target.value });\n    };\n\n    handleChangeId = (event) => {\n            const id = parseInt(event.target.value);\n            this.setState({s_id: id});\n    };\n\n    triggerMessage = () => {\n        this.setState({\n            show: true\n        })\n\n        setTimeout(() => {\n            this.setState({\n                show: false\n            })\n        }, 2500)\n    }\n\n\n    render() {\n        const postData = () => {\n            if (this.state.s_name !== '' && this.state.s_id !== '') {\n                fetch('http://127.0.0.1:5000/add_place', {\n                    method: 'POST',\n                    headers: {'Content-Type': 'application/json'},\n                    body: JSON.stringify({place: this.state.s_name, switch: this.state.s_id})\n                }).then((res) => res.json())\n                    .then((data) => console.log(data))\n                    .catch((err) => console.log(err));\n                    {this.showModal()}\n                    {this.triggerMessage()}\n                } else {\n                alert(\"Error\");\n            }\n\n        };\n\n        return (\n            <React.Fragment>\n                <h1 className=\"title-modal\">Add new switch.</h1>\n                <div className=\"inputs\">\n                    <Modal show={this.state.show} handleClose={this.hideModal} button={false}>\n                        <h4 className=\"added-msg\">✅ Successful applied the new place. 😉</h4>\n                    </Modal>\n                    <h3 className=\"title-input\">Place Name</h3>\n                    <input className=\"input add-input\" type=\"text\" name=\"name\" value={null} onChange={this.handleChangeName} placeholder=\"Switch Name\"/>\n                    <h3 className=\"title-input\">ID</h3>\n                    <input className=\"input remove-input\" type=\"number\" name=\"id\" value={null} onChange={this.handleChangeId} placeholder=\"Switch ID\"/>\n                </div>\n                <button className=\"add-btn\" onClick={postData}>Add</button>\n            </React.Fragment>\n    )\n    }\n}\nexport default Add;"]},"metadata":{},"sourceType":"module"}