{"ast":null,"code":"import _classCallCheck from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/dimitris/Documents/HOme/front_end/src/Components/App.js\";\nimport React from 'react';\nimport Buttons from './Buttons';\nimport Edit from './Edit';\nimport Modal from './Modal';\nimport '../css/App.scss';\nimport '../css/switch.css';\nimport '../css/buttons.scss';\nvar API = 'http://127.0.0.1:5000/place';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.showModal = function () {\n      _this.setState({\n        show: true\n      });\n    };\n\n    _this.hideModal = function () {\n      _this.setState({\n        show: false\n      });\n    };\n\n    _this.onClicked = function () {\n      _this.hideModal();\n\n      _this.componentWillMount();\n    };\n\n    _this.state = {\n      places: [],\n      show: false\n    };\n    _this.onClicked = _this.onClicked.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      fetch(API).then(function (response) {\n        return response.json();\n      }) // .then(json => console.log(json))\n      .then(function (text) {\n        return text.result.map(function (place) {\n          return {\n            place: \"\".concat(place.place),\n            switch_id: \"\".concat(place.switch),\n            status: \"\".concat(place.status)\n          };\n        });\n      }).then(function (places) {\n        return _this2.setState({\n          places: places\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var places = this.state.places;\n      var switches = places.map(function (place1) {\n        var place = place1.place,\n            switch_id = place1.switch_id,\n            status = place1.status;\n        var Switch = parseInt(switch_id);\n        var Status = JSON.parse(status);\n        return React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"switch-bean\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"switch-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, place), React.createElement(Buttons, {\n          isChecked: Status,\n          value: Switch,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        })));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"H\\u039Fm\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"e\")), React.createElement(\"div\", {\n        className: \"switch-panel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, switches), React.createElement(Modal, {\n        show: this.state.show,\n        handleClose: function handleClose() {\n          _this3.onClicked();\n        },\n        button: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Edit, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(\"button\", {\n        className: \"modal-btn\",\n        type: \"button\",\n        onClick: this.showModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Add/Remove\"));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/dimitris/Documents/HOme/front_end/src/Components/App.js"],"names":["React","Buttons","Edit","Modal","API","App","props","showModal","setState","show","hideModal","onClicked","componentWillMount","state","places","bind","fetch","then","response","json","text","result","map","place","switch_id","switch","status","switches","place1","Switch","parseInt","Status","JSON","parse","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Buttons from './Buttons';\nimport Edit from './Edit';\nimport Modal from './Modal';\nimport '../css/App.scss';\nimport '../css/switch.css';\nimport '../css/buttons.scss';\n\nconst API = 'http://127.0.0.1:5000/place';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n    \n        this.state = {\n            places: [],\n            show: false\n        };\n        this.onClicked = this.onClicked.bind(this);\n    };\n\n  showModal = () => {\n    this.setState({ show: true });\n  };\n  \n  hideModal = () => {\n    this.setState({ show: false });\n  };\n\n  componentWillMount() {\n        fetch(API)\n          .then(response => response.json())\n          // .then(json => console.log(json))\n          .then(text => text.result.map(place => (\n              {\n                  place: `${place.place}`,\n                  switch_id:  `${place.switch}`,\n                  status: `${place.status}`\n              }\n          )))\n        .then(places => this.setState({places: places\n      }));\n  }\n\n    onClicked = () => {\n        this.hideModal();\n        this.componentWillMount();\n    }\n\n    render() {\n        const places=this.state.places;\n        const switches= places.map(place1 => {\n            const {place, switch_id, status}=place1;\n            const Switch = parseInt(switch_id);\n            const Status = JSON.parse(status);\n                return(\n                    <React.Fragment>\n                            <div className=\"switch-bean\">\n                                <h3 className=\"switch-title\">{place}</h3>\n                                <Buttons isChecked={Status} value={Switch}/>\n                            </div>\n                    </React.Fragment>\n                )\n                });\n\n        return(\n            <div>\n                <h1 className=\"title\">HΟm<span>e</span></h1>\n                <div className=\"switch-panel\">\n                    {switches}\n                </div>\n                <Modal show={this.state.show} handleClose={() => {this.onClicked()}} button={true}>\n                    <Edit/>\n                </Modal>\n                <button className=\"modal-btn\" type='button' onClick={this.showModal}>Add/Remove</button>\n            </div>\n        \n        )\n    } \n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}