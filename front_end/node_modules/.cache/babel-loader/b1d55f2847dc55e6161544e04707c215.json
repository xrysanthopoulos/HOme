{"ast":null,"code":"import _classCallCheck from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/dimitris/Documents/HOme/front_end/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/dimitris/Documents/HOme/front_end/src/Components/Buttons.js\";\nimport React, { Component } from 'react';\n\nvar Buttons =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Buttons, _Component);\n\n  function Buttons(props) {\n    var _this;\n\n    _classCallCheck(this, Buttons);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Buttons).call(this, props));\n    _this.state = {\n      isChecked: [],\n      status: null,\n      switch_id: null\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Buttons, [{\n    key: \"getData\",\n    value: function getData() {\n      var status = this.props.isChecked;\n      var switch_id = this.props.value; // console.log(status+ \" \"+switch_id);\n\n      this.setState({\n        status: status,\n        switch_id: switch_id\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange() {\n      this.setState({\n        status: !this.state.status\n      });\n      fetch('http://127.0.0.1:5000/open_switch/switch=' + this.state.switch_id, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        } // body: JSON.stringify({status: this.state.status})\n\n      }).then(function (response) {\n        return response.json();\n      }) // .then((data) => console.log(data))\n      .catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"label\", {\n        className: \"switch\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: this.state.status ? {\n          backgroundColor: 'green'\n        } : {\n          backgroundColor: 'red'\n        },\n        className: \"slider\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: this.state.status ? {\n          transform: 'translateX(26px)'\n        } : {\n          transform: 'translateX(0px)'\n        },\n        className: \"round\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Buttons;\n}(Component);\n\nexport default Buttons;","map":{"version":3,"sources":["/Users/dimitris/Documents/HOme/front_end/src/Components/Buttons.js"],"names":["React","Component","Buttons","props","state","isChecked","status","switch_id","handleChange","bind","value","setState","getData","fetch","method","headers","then","response","json","catch","err","console","log","backgroundColor","transform"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;IAEMC,O;;;;;AACJ,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAY;AACVC,MAAAA,SAAS,EAAE,EADD;AAEVC,MAAAA,MAAM,EAAE,IAFE;AAGVC,MAAAA,SAAS,EAAE;AAHD,KAAZ;AAKA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBC,IAAlB,uDAApB;AAPiB;AAQlB;;;;8BAEU;AACP,UAAMH,MAAM,GAAG,KAAKH,KAAL,CAAWE,SAA1B;AACA,UAAME,SAAS,GAAG,KAAKJ,KAAL,CAAWO,KAA7B,CAFO,CAGP;;AACA,WAAKC,QAAL,CAAc;AACVL,QAAAA,MAAM,EAAEA,MADE;AAEVC,QAAAA,SAAS,EAAEA;AAFD,OAAd;AAID;;;wCAEkB;AACf,WAAKK,OAAL;AACH;;;mCAEc;AACX,WAAKD,QAAL,CAAc;AAACL,QAAAA,MAAM,EAAE,CAAC,KAAKF,KAAL,CAAWE;AAArB,OAAd;AACAO,MAAAA,KAAK,CAAC,8CAA4C,KAAKT,KAAL,CAAWG,SAAxD,EAAmE;AACpEO,QAAAA,MAAM,EAAE,KAD4D;AAEpEC,QAAAA,OAAO,EAAE;AAAC,0BAAgB;AAAjB,SAF2D,CAGpE;;AAHoE,OAAnE,CAAL,CAIGC,IAJH,CAIQ,UAACC,QAAD;AAAA,eAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,OAJR,EAKI;AALJ,OAMKC,KANL,CAMW,UAACC,GAAD;AAAA,eAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAT;AAAA,OANX;AAQH;;;6BACM;AACP,aACE;AAAO,QAAA,SAAS,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,QAAQ,EAAE,KAAKZ,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI;AAAK,QAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWE,MAAX,GAAoB;AAACiB,UAAAA,eAAe,EAAE;AAAlB,SAApB,GAAgD;AAACA,UAAAA,eAAe,EAAE;AAAlB,SAA5D;AACA,QAAA,SAAS,EAAC,QADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEA;AAAK,QAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWE,MAAX,GAAoB;AAACkB,UAAAA,SAAS,EAAE;AAAZ,SAApB,GAAqD;AAACA,UAAAA,SAAS,EAAE;AAAZ,SAAjE;AACA,QAAA,SAAS,EAAC,OADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CALJ,CADF;AAaD;;;;EAlDmBvB,S;;AAsDtB,eAAeC,OAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass Buttons extends Component {\n  constructor(props) {\n    super(props);\n    this.state= {\n      isChecked: [],\n      status: null,\n      switch_id: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n    getData(){\n      const status = this.props.isChecked;\n      const switch_id = this.props.value;\n      // console.log(status+ \" \"+switch_id);\n      this.setState({\n          status: status,\n          switch_id: switch_id\n      });\n    }\n\n    componentDidMount(){\n        this.getData();\n    }\n\n    handleChange() {\n        this.setState({status: !this.state.status});\n        fetch('http://127.0.0.1:5000/open_switch/switch='+this.state.switch_id, {\n            method: 'PUT',\n            headers: {'Content-Type': 'application/json'},\n            // body: JSON.stringify({status: this.state.status})\n        }).then((response) => response.json())\n            // .then((data) => console.log(data))\n            .catch((err) => console.log(err));\n\n    }\n  render() {\n    return(\n      <label className=\"switch\">\n          <input\n              type=\"checkbox\"\n              onChange={this.handleChange}\n          />\n          <div style={this.state.status ? {backgroundColor: 'green'}: {backgroundColor: 'red'}}\n          className=\"slider\">\n          <div style={this.state.status ? {transform: 'translateX(26px)'}: {transform: 'translateX(0px)'}}\n          className=\"round\"/>\n          </div>\n        </label>\n    );\n  }\n}\n\n\nexport default Buttons;"]},"metadata":{},"sourceType":"module"}